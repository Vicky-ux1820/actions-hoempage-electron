name: CI/CD for Electron App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build React App
        run: npm run build

      - name: Install Electron
        run: npm install electron

      - name: Build Electron App for ${{ matrix.os }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npm run dist

      - name: Debug dist folder
        run: |
          echo "Contents of dist folder:"
          ls -la dist

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Upload Dist Folder to GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/**/*"  # Include the entire contents of the dist folder
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v1.1.2-${{ github.ref_name }} # Define the tag dynamically or use a fixed tag
          name: "Release v1.1.2-${{ github.ref_name }}"  # Use the tag as the release name
          body: "This release contains the Electron app builds."
          draft: false
          prerelease: false
